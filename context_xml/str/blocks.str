:title: Blocks

:author: Paul Tremblay

:change date=2005-03-08:

  First started writing

:change date=2005-03-30:

  Added section on orphan control

:change date=2005-03-31:

  Added many sections, on line spacing, indenting
  aligning text

:change date=2005-04-07:

  Continued adding to info on lists, including customizing lists. 
  Added 2 graphics on lists. 

:change date=2005-04-07:

  Added a tip on mutli-paragraphed items.


====================
Paragraph Formatting
====================

The basic block unit in [:ab: context] is the paragraph. Create a
paragraph block with the [:cm: par] command. 

:t2x-no-process:

 A one line paragraph\par
 Another one line paragraph\par


:t2x-no-process rend=xml:

 A one line paragraph<cmd name="par" gr="0"/>
 Another one line paragraph<cmd name="par" gr="0"/>


[:ab: context] allows you to also create a paragraph with a simple
blank line, such as you would in email. TeXML works the opposite: it
will get rid of any blank lines. So if you use TeXML, the only way to
form a paragraph is with the [:cm: par] command. 

--------------------------------------
Space between, before and after
--------------------------------------

Use the commands [:cm: setupwhitespace] to control the amount of space
between paragraph. To reset the amount of space to the default value,
use "none" as a value.

:t2x-no-process:

 \setupwhitespace[5mm]
 first paragraph\par
 second paragraph\par
 third paragraph\par
 \setupwhitespace[none]
 fourth paragraph\par
 fifth paragraph\par

:t2x-no-process rend=xml:


 <cmd name="par" gr="0"/>
 <cmd name="setupwhitespace">
  <opt>5mm</opt>
 </cmd>
 first paragraph
 <cmd name="par" gr="0"/>
 second paragaph
 <cmd name="par" gr="0"/>
 third paragaph
 <cmd name="par" gr="0"/>
 <cmd name="setupwhitespace">
  <opt>none</cmd>
 </cmd>
 fourth paragarph
 <cmd name="par" gr="0"/>
 fifth paragarph
 <cmd name="par" gr="0"/>

:fig url=whitespace1: creating space between each paragraph

If you want to add extra space before of after a paragraphs, use the
[:cm: blank] command.  


:t2x-no-process:


 before paragraph
 \blank[24pt]
 This paragraph has 24 points before it and 36 points after it.\par
 \blank[36pt]
 after paragraph\par

:t2x-no-process rend=xml:


 <cmd name="blank">
  <opt>24pt</opt>
 </cmd>
 This paragraph has 24 points before it and 36 points after it.
 <cmd name="par" gr="0"/>
 <cmd name="blank">
  <opt>36pt</opt>
 </cmd>
 after paragraph
 <cmd name="par" gr="0"/>

:fig url=blankspace1: space before and after paragraph


The [:cm: blank] command will not put any blank space at the top of th
page unless you use the [:op: force] option. 

:t2x-no-process:

 \blank[force, 36pt]
 % chapter title
 Thoreau's Life

:t2x-no-process rend=xml:

 <cmd name="blank">
  <opt>force, 36pt</opt>
 </cmd>
 <!--title chapter-->
 Thourea's Life

-------------
Line spacing
-------------

Set up line spacing with the [:cm: setupinterlinespace] command.  This
command's option can be set to small for single spacing (the default),
medium for 1.5 spacing, or big for double spacing. 

:t2x-no-process:

 % doublespacing
 \setupinterlinespace[big]

:t2x-no-process rend=xml:

 <!--doublespacing-->
 <cmd name="setupinterlinespace">
  <opt>big</opt>
 </cmd>


To gain even more control over the space between lines, change the
option to line=x, where x is some value, such as 18pt.

:t2x-no-process:

 \setupinterlinespace[line=18pt]

:t2x-no-process rend=xml:

 <cmd name="setupinterlinespace">
  <opt>line=18pt</opt>
 </cmd>

:ul:

  :head: Tips

  * Setting the value of line to some value of ex ensures that your
    line spacing will always stay in proportion to the size of your 
    font.

  * 2.8ex is the default size of line. 

  * 3.5ex seems to be the size for one and one half line spacing
    ([:pr: medium]).

  * 4.2ex seems to be the size for double spacing ([:pr: big])




----------------
Indenting
----------------

First line
------------

Two commands control indenting of the first line: [:cm: indenting] and
[:cm: setupindenting]. 

The first command determines the amount of the indent for the
first line.

:t2x-no-process:

 \setupindenting[12pt]

:t2x-no-process rend=xml:

 <cmd name="setupindenting">
  <opt>12pt</opt>
 </cmd>

The [:cm: indenting] command, determines when indenting will
occurr. By default, [:ab: context] will not indent blocks of text that
it determines do not look good, such as a block of text after a
vertical space. To override this feature and gain complete control
over indenting, set [:cm: indenting] to "first".

:t2x-no-process:
 
 \indenting[first]

:t2x-no-process rend=xml:
 
 <cmd name="indenting">
  <opt>first</opt>
 </cmd>

This indents all paragraphs by the amount of the [:cm: setupindenting]
command. You probably don't want headings and titles indented, so just
before you write your header, use the [:cm: noindenting] command.

:t2x-no-process:

 \indenting[first]
 \setupindenting[12pt]
 body text ...\par
 % turn off indenting for a section head
 \noindenting
 section head\par
 % body text will again be indented
 more body text..\par

:t2x-no-process rend=xml:

 <cmd name="indenting">
  <opt>first</opt>
 </cmd>
 <cmd name="setupindenting">
  <opt>12pt</opt>
 </cmd>
 body text..
 <!--turn off indenting for a section head-->
 section head\par
 <!--body text will again be indented-->
 more body text ...\par

:ul:

  :head: Tips

  * You don't need to use the [:cm: indenting] command to get
  indenting to work. If you do not, [:ab: context] will use the
  default of not indenting paragraphs after vertical spaces. 



Indenting blocks
--------------------

To reduce the width of a text, as for a quote, use the envirnoment
"narrower." Set up the dimensions with the [:cm: setupnarrower]
command. 

:t2x-no-process:

 \setupnarrower[left=24pt, right=30pt]
 \startnarrower[left, right]
  body text..
 \stopnarrower

:t2x-no-process rend=xml:

 <cmd name="setupnarrower">
  <opt>left=24pt, right=30pt</opt>
 </cmd>
 <env name="narrower">
  <opt>left, right</opt>
  quote text
 </env>

:ul:

  :head: Tips

  * If you do not use the [:cm: setupnarrower] command, 
    [:ab: context] will set right and left to 12pt.

  * If you only want to indent the left, leave off the right
    for the option in [:cm: setupnarrower]. Likewise, leave off
    the left if you only want to indent your text to the right.

--------------
Aligning text
--------------

Non-justified text
------------------

By default, [:ab: context] justifies text. In fact, creating pretty
text is one [:ab: context]'s main feature. If you want your text
non-justified, use the [:cm: setupalign] command with the option of
[:pr: right].

:t2x-no-process:

 \setupalign[right]

:t2x-no-process rend=xml:

 <cmd name="setupalign">
  <opt>right</otp>
 </cmd>

:ul:

  :head: Tips

  * To align a whole block of text to the left, set the option
  to [:pr: left].

  * To center a whole block of text, set the option to [:pr: middle].

  * Justified text is easier to read because the spaces between
  the words are the same.

  * Kudos for the developers of [:ab: context] for making
  non-justified text so easy to use. In other forms of [:ab: tex],
  using non-justified text required complicated code.

Changing alignment of small portions of text
---------------------------------------------

Most likely, you will use one type of alignment for your document,
such as justified or non-justified. However, you will often want to
change the alignment for just a portion of text, such as the date
at the top of a letter, or a title.

Centering
^^^^^^^^^^

To center a line, use the \midaligned command.


:t2x-no-process:

 \midaligned{This text is centered}

:t2x-no-process rend=xml:

 <cmd name="midaligned">
  <parm>This text is centered</parm>
 </cmd>

Left-Aligned
^^^^^^^^^^^^^

To make a line of text left aligned, use the [:cm: leftaligned]
command.

:t2x-no-process:

 \leftaligned{This text left-aligned}

:t2x-no-process rend=xml:

 <cmd name="leftaligned">
  <parm>This text is left-aligned</parm>
 </cmd>

Non-Justified
^^^^^^^^^^^^^^

To make a line of text non-justified, use the [:cm: rightaligned]
command.

:t2x-no-process:

 \rightaligned{This text is non-justified}

:t2x-no-process rend=xml:

 <cmd name="rightaligned">
  <parm>This text is non-justified</parm>
 </cmd>

==========================
Orphan and Widow Controls
==========================

Orphans and widows are the ugly text that appears by themselves at the
top or bottom of a page.  An orphan is the first line of a paragraph
on the last line of a page whereas the last line of the paragraph on a
new page is a widow. [:ab: context] uses the definitions  [:cm:
widowpenalty=x] and [:cm: clubpenalty=x] to discourage either of these
typographical flaws. The default values for each is 150. Increasing
the value to 450 should discourage most widows and orphans.

:t2x-no-process:

 \starttext
 % make sure you put these two commands *after*
 % the \starttext command
 \clubpenalty=450
 \widowpenalty=450
 ...

:t2x-no-process rend=xml:

 <env name="text">
 <!--
 Make sure this text occurs within
 the text env
 -->
 <cmd name="clubpenalty=450"/>
 <cmd name="widowpenalty=450"/>
 ...
 </env>

Keeping text with next
-----------------------

Many commercial programs such as Microsoft Word, as well as FO, allow
for you to keep section headings with the text that follows, so that
they won't become stuck by themselves at the bottom of the page.  You
can achieve the same thing with the [:cm: testpage] command.

The [:cm: testpage] command takes one option, a number, which
roughly correspond to the number of minimum additional "lines" the page
should contain. If the number of the option were 2, [:ab: context]
checks to see if it can fit two more "lines" on the page. If not,
it breaks the page at the [:cm: testpage] command and puts the text on
the next page.

This command has the affect of allowing text to stick together. 
If you issued this command right before a section title, and used the
number 3, [:ab: context] would check to see if the heading and two
additional "lines" below it can fit on the page. If not, it breaks the
page, preventing the heading from becoming an orphan.

I put the "lines" in quotes because [:ab: context] doesn't also counts
white space as "lines." If you use white space after your title (an
most likely you will), you will have to increase the number in the
option. Too high a number will certainly prevent orphans of the title,
but will also result an ugly empty spaces at the bottom of pages. 5 or
6 will probably work in most situations.


:t2x-no-process:

 % space before the sub-title
 \blank[12pt]
 % make sure the page can contain 5 more virtual lines
 % if not, break
 \testpage[5]
 % the title (which normally would appear in larger 
 % font)
 Thoreau's Lifestyle\par
 % space after the title
 \blank[12pt]
.. end block code

:t2x-no-process rend=xml:

 <!--space before the sub-title-->
 <cmd name="blank">
  <opt>12pt</opt>
 </cmd>
 <!--
  make sure the page can contain 5 more virtual lines
  if not, break
 -->
 <cmd name="testpage">
  <opt>3</opt>
 </cmd>
 <!--
 the title (which normally would appear in larger 
  font)
 -->
 Thoreau's Lifestyle
 <cmd name="par" gr="0"/>
 <!--space after the title-->
 <cmd name="blank">
  <opt>12pt</opt>
 </cmd>


==========
Footnotes
==========

default foototes
-----------------

The [:cm: footnote] command creates footnotes. Put the text of the
footnote in the parameter.

:t2x-no-process:
 
 At present I am a sojourner in civilized life
 again. \footnote{Thoreau...}
.. end block

:src url=context_examples/footnote.tex: source file

:t2x-no-process rend=xml:
 
 At present I am a sojourner in civilized life
 again. 
  <cmd name="footnote">
   <parm>
   Thoreau...
   </parm>
  </cmd>
.. end block

:src url=texml_examples/footnote.xml: source file

customizing footnotes
----------------------


Basic customization
^^^^^^^^^^^^^^^^^^^^

The [:cm: setupfootnotes] command allows you to many features for
footnotes. This command takes one option, but within that option you
can set many properties.

:t2x-no-process:

 % set up a defintion for the amount of distance
 % between the body text and footnotes
 % and between the footnotes and footer
 \def\DistanceBef{\blank[24pt]}
 \def\DistanceAft{\blank[24pt]}

 \setupfootnotes[
  % use Roman numerals instead of numbers
  conversion=romannumerals,
  % turn on rule (default)
  % use "off" instead of "on" to get rid of rule
  rule=on,
  % set body font size
  bodyfont=10pt,
  % set width
  width=5in,
  % distnace marker extends into the margin
  margindistance=12pt,
  % distance of footnote from body text
  before=\DistanceBef,
  % distance of footnotes from footer
  after=\DistanceAft,
  ]
 
 At present I am a sojourner in civilized life
 again. \footnote{Thoreau...}
.. end block

:src url=context_examples/footnote2.tex: source file

:fig url=footnote2: customizing footnotes

:ul:

  :head: Tips

  * The [:pr: margindistance] property pushes the footnote marker
    into the margin by the amount you specify. If you do not specify
    any amount, [:ab: context] will push the marker into the margin
    by a small amount.

  * Other values for [:op: conversion] are [:pr: characters] for lower-case
    letters; [:pr: Characters] for upper-case letters; [:pr:
    Romannumerals] for upper-case Roman numerals; and [:pr: set 3] for
    symbols such as daggers and asteristics. You can also experiment
    with other sets, such as [:pr: set 1] or [:pr: set 2]. Sets
    indicate a mathmatical set of symbols defined by [:ab: context].

  * For indenting footnotes, see the next section

Changing the footnote number
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

There are a number of ways to set the number for the footnote marker.

To reset the number for every page so each new page starts at 1 (or
the symbol or character associated with 1), set the [:op: byway]
option in the [:cm: setupfootnotes] to [:pr: bypage].

To reset the number for every section, so each new section starts at 1
(or the symbol or character associated with 1), set the [:op: byway]
option in the [:cm: setupfootnotes] to [:pr: *section*], where section
is the name of your section. This document uses uses  only the [:cm:
part] section. In order to have my footnotes start at 1 after each
[:cm: part] command, I would type [:op: way=bypart].

To reset the number manually,  set the [:op: byway] option in the
[:cm: setupfootnotes] to [:pr: bytext]. Before each footnote, issue
the  [:cm: setnumber] command. Put [:pr: footnote] as the option, and
the desired number *minus 1*  as the parameter. If you want the number
to be 3, use 2 as your parameter.


:t2x-no-process:

 \setupfootnotes[way=bytext, conversion=characters]

 % set the number manually
 % the next footnote will be *3*
 \setnumber[footnote]{2}

 The twelve labors of Hercules\footnote{Hercules had to perform 12
 near-impossible tasks to become a god} were trifling in comparison
 with those which my neighbors have undertaken;

:ul:

  :head: Tips

  * Always use a number as the parameter of the [:cm: setnumber]
    command. If you want another footnote marker such as a Roman
    numeral, use the [:op: conversion] option (see above), and [:ab:
    context] will convert whatever number you choose to the
    appropriate symbol.

:src url=context_examples/footnote6.tex: source file

Space between footnotes
^^^^^^^^^^^^^^^^^^^^^^^^

Crete custom space between footnotes by using the 
[:cm: setupfootnotedefinition] command. Like the [:cm: setupfootnotes]
command, this command has an [:pr: after] and [:pr: before] property,
only in the case of [:cm: setupfootnotedefinition], these properties
determine the space between individual footnotes rather than before
and after the complete block of footnotes.

:t2x-no-process:

 %set up the amount of space before each footnote
 \def\DistanceBef{\blank[12pt]}
 % set up the amount of space after each footnote
 \def\DistanceAft{\blank[12pt]}

 \setupfootnotedefinition[
  after=\DistanceAft,
  before=\DistanceBef,
 ]

 At present I am a sojourner in civilized life
 again. \footnote{Thoreau started writing {\sl Walden} in 1846. ..  }
 ...

 I would fain say something, no so much concerning the Chinese and
 Sandwich Islanders \footnote{Hawaiians} 
.. end block

:src url=context_examples/footnote3.tex: source file


First line indent
^^^^^^^^^^^^^^^^^^^

To create a footnote with a first line indent, use the [:cm: hspace]
command right before your footnote text. You will have to define the
actual spacing in a separate command issued previously.

:t2x-no-process:

 % define amount of space
 \definehspace[footnoteSpace][12pt]

 At present I am a sojourner in civilized life
  again. \footnote{\hspace[footnoteSpace]Thoreau started writing ...}
.. end block

:src url=context_examples/footnote4.tex: source file

hanging indent
^^^^^^^^^^^^^^^^

In order to create a footnote with a hanging indent, you will have to
indent the first line by the negative amount of the indent using the
[:cm: hskip] command. At the same time, indent the entire footnote by
the positive amount of the indent. Last, push the text up by the
negative amount of a line by using the [:cm: vskip] command in order
to delete the extra space created by the indentin environment. 

:t2x-no-process:

 % define amount to indent
 \setupnarrower[left=12pt]

 At present I am a sojourner in civilized life
 again. \footnote{
 \startnarrower[left]
 % create a negative vertical space equivlent to the line height
 \vskip-14pt
 % indent the first line by the negative amount
 \hskip-12pt Thoreau started writing {\sl Walden} in 1846, a few
 months after . . .
 \stopnarrower}

:src url=context_examples/footnote5.tex: source file


======
Lists
======

Default list
-------------

Form lists by creating an itemize environment. The numbering for the
itemized list is determined by the first option of the [:cm:
startitemize] command. Here are the possible values for the first
option and the result these values produce.

:tb url=table2:

The [:cm: item] command creates the actual item in the list.

:t2x-no-process:

 \startitemize[n]
 \item {\sl Temperance.} Eat not to dulness. Drink not to Elevation.
 \item {\sl Silence.} Speak not but what may benefit other or yourself.
 ...
 \stopitemize
.. stop block

:src url=context_examples/itemize1.tex: source file

:ul:

 :head: Tips

 * If you use [:pr: continue] as an additional property in the 
   [:cm: startitemize command, you can continue numbering a list
   already started. ([:cm: \\startitemize[n, continue]])

 * If you use [:pr: inmargin] as an additional property in the [:cm:
   startitemize] command, you will push the markers into the margin.

 * If you use the use [:pr: intro] property in the [:cm: startitemize]
    command, you will ensure theat the previous paragraph and the list
    will stick together and not be broken by a page break.

 * If your item contains more than one paragraph, use the [:cm: par]
   comand to separate them. Note that the [:ab: context] manual
   suggests you use the [:cm: head] command instead of the [:cm: item]
   command for items with more than one paragraph, but I found the
   [:cm: head] command could not handle items with more than 2
   paragraphs.

..  * You can define your own characters for non-ordered lists. Use the 
    [:cm: definesymbol] command, such as: [:cm:
    definesymbol[1][$\\diamond$]]. 
    Now start your itemizing environment with [:cm: startitemize[1]].

Defining your own marker
-------------------------

If you wish to use your own markers in a list, rather than have [:ab:
context] provide them, use the command [:cm: sym] instead of [:cm:
item]. Within the parameter, provide the marker you want. 

:t2x-no-process:

 These Names of Virtues with their Precepts were\par
 \startitemize
 \sym{1)} {\sl Temperance.} Eat not to dulness. Drink not to Elevation.
 \sym{2)} {\sl Silence.} Speak not but what may benefit other or yourself.
 ...
.. stop block
 
:src url=context_examples/itemize3.tex: source file


Customizing lists
------------------

Customize your list by first using the [:cm: setupitemize] command. If
you want to put space before or after the list, or inbetween list
items, first establish definitions that you can use in the
[:cm: setupitemize] command.

:t2x-no-process:

 \def\Inbetween{\blank[24pt]}

 \def\Before{\blank[24pt]} % between body text and start of list

 \def\After{\blank[18pt]} % between body text and start of list

 \setupitemize[inbetween=\Inbetween,
 before=\Before,
 after=\After,
 stopper=:,
 left=(,
 right=),
 margin=24pt,
 width=48pt,
 ]
 ...
.. end block

:src url=context_examples/itemize2.tex: source file

:fig url=itemize1: customizing a list 1

:fig url=itemize2: customizing a list 2
