:title: Tables

:author: Paul Tremblay

:change date=2005-04-08:

  First started writing

:change date=2005-04-09:

  Added most infomration on creating tabulation tables and basic
  tables, including customizing line widths, captions; and merging
  cells. 

:change date=2005-04-10:
  
  Added most information for creating basic table.

:change date=2005-04-11:

  Added most information on creating TABLE tables, including mering
  cells and customizing cells by numers and columns.


==========================================
Tables without vertical lines (tabulate)
==========================================

The [:cm: tabulate] environment allows you to create simple tables,
suited for tables with large blocks of text. This type of table
does not produce vertical lines between cells--hence the name
tabulate, hinting at the type of table created with tabs. 

Rather than try to explain the many details of this layout, let me
first show the code example.

:t2x-no-process:

 % start envrionment and setup columns
 \starttabulate[|p(6cm) j3|p(6cm)|]
 
 % create a cell
 \NC American Community Survey 
 %
 %create a cell
 \NC Current Population Survey 
 %
 % end the row
 \NC\NR
 % create a horizontal line
 %
 \HL
 %
 % create a cell
 \NC 
 All dollar values for income are adjusted 
 to latest calendar year of estimates using 
 the Consumer Price Index for the date collected 
 versus the average for the year.
 % create a cell
 \NC None
 %
 % end the row
 \NC\NR
 %
 % end tabulate
 \stoptabulate
.. end block

:src url=context_examples/table1.tex: source file

Setting up the columns
-----------------------

Begin the table with the [:cm: starttabulate] command. Set up the
column information in the first option. The information for formatting
each column gets put between the "|" character. A one column table
needs 2 "|" characters, a two column table needs 3 "|" characters, and
so on. 

The first colum of my table has two commands. The first, [:pr:
p(6cm)], tells [:ab: context] to create a 6 cm paragraph for the
column. If the column contains cells with brief text that aren't
really paragraphs, use the [:pr: l], [:pr: r], or [:pr: c] property.
The [:pr: l] command aligns the text left; the [:pr: r] aligns the
text right; and the [:pr: c] command centers the text. For example,
for a two-column table, my setups might look like this:

:t2x-no-process:

 % make two columns, both aligned left
 \starttabulate[|l|l|]

In addtion, one can use the [:pr: w] property for a one line column.
Like the [:pr: p] option, the [:pr; w] option takes a dimmension in
parenthesis.

Each column must contain one of the above properties, so that [:ab:
context] knows how to format it.

The setups for each column can have additional commands. The [:pr: j3]
option in my table creates space after the column. A number lower
than 3 creates less space, while a number greater than 3 creates more.
The opposite property, [:pr: i] creates space before the column, and
functions just like its counterpart [:pr: j]. The property [:pr: k]
seems to create space on either side of the column.

Here is a summary of the options for the column setups.
 
:tb url=table3:

Body commands
--------------

Within the body of the table itself, issue comand in order to create
cells, rows, and horiziontal lines. The [:cm: NC] command creates a
new cell. The [:cm: NR] command creates a new row. The [:cm: HL]
creates a horizontal line.

You must end every rown (including the last) with the [:cm: NR]
command.

===============
Standard table
===============

The standard table commands give us pretty good flexibility in
creating complicated tables. 

------------
Basic Table
------------

Here is a basic table.

:t2x-no-process:

 \placetable[here][tab:insurance]{Percentage of People without health
 insurance in US}
 \starttable[|l w(30mm)|l|l|]
 \HL
 \VL State     \VL 3-year average \VL 2-year average \VL\SR
 \HL[4]
 \VL Alabama   \VL 13.3           \VL 13.5           \VL\FR
 \HL
 \VL Alaska    \VL 17.8           \VL 18.8            \VL\MR
 \HL
 \VL Arizona   \VL 17.3            \VL 16.9           \VL\LR
 \HL
 \stoptable
.. end block

:src url=context_examples/table2.tex: source file

The placetable command
-----------------------

The [:cm: placetable] command acts the same way as the [:cm:
placefloat] command. The first option, [:pr: here] tells [:ab:
context] to place the table (if possible) in the current location. The
next option is a reference marker. The parameter is the caption of
the table. If you don't want a title but do want the word "table" and
number, leave the parameter empty. If you do not want any caption at
all, use [:pr: none] for your parameter.

See below for for customizing the caption. Here is are the source
files that create customize captions.

:src url=context_examples/table3.tex: [:ab: tex] source file

Setting up the columns
-----------------------

The column setup should look familiar. I setup 3 columns, and made
sure the first column was at least 30 mm wide.

Body commands
--------------

Rather than using the [:cm: NC] command to creat a new cell, this
table uses [:cm: VL], which creates a vertical line between each cell.

Notice how the [:cm: HL] command has the option [:pr: 4]. This option
increases the line width by a factor of 4. You can use any integer you
want--the larger the number, the thicker the width. You can use
the same option after a [:cm: VL] command.

The endings for each row are different than the [:cm: NL] commands
fromt the tabulate table. Each ending performs a different function. 

\* The [:cm: SR] command puts extra space between it and the next row.
(Frankly, I don't find this to be the case with my table, but this is
what it is supposed to do.)

\* The [:cm: FR] command establishes the correct distance for the first
row.

\* The [:cm: MR] establishes the correct distance for the middle row.

\* The [:cm: LR] command establishes the correct distance for the last
row.

:ul:

 :head: Tips

 * You can use the [:cm: AR] or automatic row command in place of 
   the [:cm: SR], [:cm: FR], and [:cm: LR] commands. The [:cm: AR]
   command seems to do a good job adjusting the height.


Merging cells horizontally
---------------------------

In order to merge cells horizontally, use the [:cm: NC] instead of the
[:cm: VL] command, and omit any text for the cell to be merged. In
other words, simpley create an empty cell with no border.

:t2x-no-process:

 \starttable[|l w(30mm)|l|l|]
 \HL
 \VL State     \VL 3-year average \VL 2-year average \VL\SR
 \HL[4]
 \VL Alabama   \NC                \VL 13.5           \VL\FR
 ...
.. end block

:src url=context_examples/table4.tex: source file

Merging cells vertically
--------------------------

In order to merge cells vertically, don't use the [:cm: HR] command to
draw a continuous line. Instead, use a combination of the [:cm:
DL], [:cm: DC] and [:cm: DR] commands to draw lines under the columns you
want.  

\* The [:cm: DL] command draws a line under the next column, *and then
skips a column.* This last part is important to remember. If you
start your line-drawing commands with a [:cm: DL] command, [:ab:
context] draws a line under column one and then leaves a blank for
column two. In essence, the [:cm: DL] command issues two commands:
(1) draw a line across the column(s); and (2) create an empty space
across the following column.

If you want to draw a line across two columns, use an option after the
[:cm: DL] command, and make the option the number of how lines you
wish to draw. 

:t2x-no-process:

 % draw a line across two columns, then down't draw a line across the
 % next
 \DL[2] ...
..end block

Note the difference between the first and second command below. 
The first leaves no line under the middle column. The second command
leaves no line under the third column.

:t2x-no-process:

 % draws a line for column one, skips column two, and draws a line 
 % for column three
 \DL \DL ...
 % draws a line for columns one and two, and skips column three
 \DL[2] ...
.. end block

\* The [:cm: DC] command tells [:ab: context] to draw no line.

:t2x-no-process:

 % skips column one before drawing a line for column two
 % and leaving the a blank for column 3
 \DC \DL ...
.. end block

\* The [:cm: DR] command is used to end a row which contains [:cm:
DL] or [:cm: DC] command.

:t2x-no-process:

 % draws a line for column one, skips column two, and draws a line 
 % for column three
 % (same as above, except now the rows are properly ended)
 \DL \DL \DR
 % draws a line for columns one and two, and skips column three
 \DL[2] \DR
.. end block

:src url=context_examples/table5.tex: source file

Creating a multi-paged table
-----------------------------

In order to create a multi-page table with this type of table, follow
the example below. I'm not sure of all the details of this type of
table, but I have been told it is depreacted, and that for multi-page
tables it might be better to use the type of table in the next
section. None-the-less, I was able to get this table to work.

:t2x-no-process:

 % split the table across pages
 \splitfloat
 % make sure your group the \placetable with {}
 {\placetable{Percentage of People without health
 insurance in US}}
 % make sure you group everything else with {}
 % theis table head will repeated on each page
 {\starttablehead
 \HL
 \VL State     \VL 3-year average \VL 2-year average  \VL\SR
 \HL[4]
 \stoptablehead
 % this detail will be repeated at the bottom of each page
 \starttabletail
 \HL[4]
 \stoptabletail
 % create a starttables--notice the plural!
 \starttables[|l w(30mm)|l|l|]
 \VL Alabama   \VL 13.3      \VL 13.5   \VL\FR
 \HL
 ...
 \stoptables}
.. stop block

:src url=context_examples/table9.tex: source file

More Examples
---------------

Here are some more examples of tables.

This table is an example of merging cells horizontally and vertically.
It also shows how to cutomize a header, center cell text, and create
blank cells. 

:src url=context_examples/table7.tex: source file

This table is likewise a good example of merging cells horizontally
and vertically. 

:src url=context_examples/table8.tex: source file

==================
Tables with TABLE
==================

The TABLE is the most powerful and flexible tables module in [:ab:
context]. Its sytax is closest to css stylesheets. 

You can find a PDF file with many examples at 
[:xref url=http\://www.pragma-ade.com/general/manuals/enattab.pdf:
url=http\://www.pragma-ade.com/general/manuals/enattab.pdf]

The following is a simple table.


:t2x-no-process:

 \bTABLE
 \bTR \bTD State \eTD \bTD3-year average \eTD \bTD2-year average \eTD \eTR
 \bTR \bTD Alabama \eTD \bTD 13.3 \eTD \bTD 13.5 \eTD \eTR
 ...
 \eTABLE
.. stop block

:src url=context_examples/table10.tex: source file

Each command in the TABLE environment is paired: [:cm: bTABLE] is matched
with [:cm: eTable], [:cm: bTR] is matched with [:cm: eTR], and so on.
The lower-case "b" stands for beginn, while the lower-case "e" stands
for end.

The commands otherwise look very much like XHTML format, with TR
standing for table row, and TD for table cell. 

Merging cells horizontally
===========================

In order to merge cells horiziontally, use the [:op: nc] option after
the cell you want to merge. The [:pr: nc] stands for number of
columns.

:t2x-no-process:

 \bTABLE
 \bTR \bTD State \eTD \bTD3-year average \eTD \bTD2-year average \eTD \eTR
 %
 % merge the first two cells
 \bTR \bTD[nc=2] Alabama \eTD  \bTD 13.5 \eTD \eTR
 %
 % merge last two cells
 \bTR \bTD Alaska \eTD \bTD[nc=2] 17.8 \eTD  \eTR
 %
 %merget all three cells
 \bTR \bTD[nc=3] Arizona \eTD  \eTR
 \eTABLE
.. end block

:src url=context_examples/table11.tex: source file

Merging cells vertically
===========================

In order to merge cells vertically, use the [:op: nr] option after
the cell you want to merge. The [:pr: nj] stands for number of
rows.

:t2x-no-process:

 \bTABLE
 \bTR \bTD State \eTD \bTD3-year average \eTD \bTD2-year average \eTD \eTR
 %
 % merge first cell down one
 \bTR \bTD[nr=2] Alabama \eTD \bTD 13.3 \eTD \bTD 13.5 \eTD \eTR
 %
 % merge last cell down one
 \bTR \bTD 17.8 \eTD \bTD[nr=2] 18.8 \eTD \eTR
 \bTR \bTD Arizona \eTD \bTD 17.3 \eTD  \eTR
 \eTABLE
.. end block

:src url=context_examples/table12.tex: source file

Creating multi-page tables
===========================

In order to make sure a larget TABLE can split across pages, use
the option [:op: split=yes] right after the [:cm: bTABLE] command.

:t2x-no-process:

 \bTABLE[split=yes]
.. end block

If you want create tables in which the header is
repeated with each page, divide your table into the head, body, and
foot. Use the [:cm: bTABLEhead] and [:cm: eTABLEhead] to create the
head. Use the [:cm: bTABLEbody] and [:cm: eTABLEbody] to create
the body. Use the [:cm: bTABLEfoot] and [:cm: eTABLEfoot] to create
the foot.

Use the option [:op: split=repeat] right after the [:cm: bTABLE] command.

The head will appear at the top of the table on each page. The foot
will appear once at the bottom of the table.

:t2x-no-process:

 % split the table across pages and make sure the head is foot are repeated
 \bTABLE[split=repeat]
 % create the head
 \bTABLEhead
 \bTR \bTD State  \eTD \bTD 3-year average \eTD \bTD 2-year average \eTD \eTR
 \eTABLEhead
 % create the body
 \bTABLEbody
 \bTR \bTD Alabama  \eTD \bTD 13.3  \eTD \bTD 13.5  \eTD \eTR
 \bTR \bTD Alaska  \eTD \bTD 17.8  \eTD \bTD 18.8  \eTD \eTR
 ...
 \eTABLEbody
 % create the foot
 \bTABLEfoot
 \bTR \bTD[nc=3] Details may not sum to totals because of rounding. \eTD \eTR
 \eTABLEfoot
 \eTABLE
.. endblock


:src url=context_examples/table16.tex: source file

Customizing TABLE
==================

Customizing cells and rows in TABLE is more straightforward than with
other table modules. Use the [:cm: setupTABLE] command. The first few
commands of this option describe the rows, columns, or cells that need
to be customized. The last option describes the actual customization. 

You can use as many [:cm: setupTABLE] commands as you have
customizations.

cell numbers
------------

Each cell in the TABLE environment is assigned both a row and column
number. 

:fig url=rows_columns_1: each cell as a row and column number

If the table has merged cells, the numbering does not change. The
invisible cells are given their number, and the non-invisible cells
keep theirs.

:fig url=rows_columns_2: each cell as a row and column number

customization options
----------------------

Here is a table of possible properties you can use to customize each
cell.

:tb url=table4:

Changing cells by their numbers
-----------------------------------

To change something for individual cells using cell addressing (that
is, identifying the cells by their rows and numbers), use the
[:setupTABLE] command, followed by the  number of the column, followed
by the number followed by the number of the row, and finally followed
by the desired customization. The following table makes the first cell
(1, 1) and the middle cell (2, 2) red.

:t2x-no-process:

 %needed to get color
 \setupcolors[state=start]
 %
 % set up first column, first row
 \setupTABLE[1][1][background=color, backgroundcolor=red]
 %
 % setup second column, second row
 \setupTABLE[2][2][background=color, backgroundcolor=red]
.. end block

:src url=context_examples/table13.tex: source file

Changing rows
--------------

To change the appearance of one or more rows, use "r" as the property
for your first option. In the second option, describe which rows you
want to change. Use [:pr: each] for every row; [:pr: odd] for odd
rows; [:pr: even] for even rows; [:pr: first] for the first row; 
[:pr: last] for the last row; a number to indicate a certain row; a
series of numbers separated by commas to indicate a series of rows.

:t2x-no-process:

 % change color of all even rows to red
 %\setupTABLE[r][even][background=color, backgroundcolor=red]
.. end block

:src url=context_examples/table14.tex: source file

Changing columns
-----------------

To change the appearance of one or more rows, use "c" as the property
for your first option. You can use the same positional properties as
you do for rows (see above).

:t2x-no-process:

 % change color of all even columns to red
 %\setupTABLE[c][even][background=color, backgroundcolor=red]
.. end block

:src url=context_examples/table15.tex: source file

.. TODO

.. make new picts
.. make table for position elements of row
.. \bTABLE[width=5\hsize
