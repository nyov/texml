<doc id="texml.spec">
  <title>TeXML specification</title>
  <p><a href="http://getfo.org/texml/">TeXML</a> is an XML syntax for TeX. A processor translates TeXML source into TeX.</p>
  <p>The Document Type Definition (DTD) for TeXML can be found in a TeXML distribution package.</p>

  <sect>
    <title toc="0">Table of Contents</title>
    <toc />
  </sect>

  
  <sect>
    <title>Root element: <e>TeXML</e></title>
    <example><lst><![CDATA[<?xml version="1.0" encoding="..."?>
<TeXML>
  ... your content here ...
</TeXML>
]]></lst></example>
    <p>The root element of a TeXML document is the element <e>TeXML</e>.</p>
  </sect>
  
  <sect>
    <title>Encoding commands: <e>cmd</e></title>
    <example>
      <title>TeXML:</title>
<lst><![CDATA[<cmd name="documentclass">
  <opt>12pt</opt>
  <parm>letter</parm>
</cmd>]]></lst>
    </example>
    <example>
      <title>TeX:</title>
      <lst>\documentclass[12pt]{letter}</lst>
    </example>
    <a name="cmd"/><p>The TeXML <e>cmd</e> element encodes TeX commands.</p>
    <ul>
      <li>To add options to a command, add <e>opt</e> children to the <e>cmd</e> element. The processor places <e>opt</e> children within square braces, as LaTeX style options.</li>
      <li>To add parameters to a command, add <e>parm</e> children to the <e>cmd</e> element. The processor places <e>parm</e> children within TeX groups, that is, curly braces.</li>
    </ul>
    <p>The TeXML <e>cmd</e> can have several <e>parm</e> or <e>opt</e> elements.</p>
  </sect>


  <sect>
    <title>Encoding environments: <e>env</e></title>
    <example>
      <title>TeXML:</title>
<lst>&lt;env name="document"&gt;
...
&lt;/env&gt;</lst>
    </example>
    <example>
      <title>TeX:</title>
<lst>\begin{document}
...
\end{document}</lst>
    </example>
    <p>The element <e>env</e> is a convenience for expressing LaTeX environments.</p>
  </sect>


  <sect>
    <title>Encoding groups: <e>group</e></title>
    <example>
      <title>TeXML:</title>
      <lst><![CDATA[<group><cmd name="it"/>italics</group>]]></lst>
    </example>
    <example>
      <title>TeX:</title>
      <lst>{\it italics}</lst>
    </example>
    <p>The <e>group</e> element is a convenience for encoding groups. The processor will supply an opening brace at the beginning, and a closing brace at the end of the group.</p>
  </sect>

  <sect>
    <title>Encoding math groups: <e>math</e> and <e>dmath</e></title>
    <example>
      <title>TeXML:</title>
<lst><![CDATA[<math>a+b</math>
<dmath><cmd name="sqrt"><parm>2</parm></cmd></dmath>]]></lst>
    </example>
    <example>
      <title>TeX:</title>
<lst>$a+b$
$$\sqrt{2}$$</lst>
    </example>
    <p>Elements <e>math</e> and <e>dmath</e> are conveniences for encoding math groups. The processor inserts the appropriate math shift symbol at the beginning and end of the group and also switches mode to <tt>math</tt> inside the group.</p>
  </sect>

  <sect>
    <title>Encoding control symbols: <e>ctrl</e></title>
    <example>
      <title>TeXML:</title>
      <lst>line1&lt;ctrl ch="\"/>line2</lst>
    </example>
    <example>
      <title>TeX:</title>
      <lst>line1\\line2</lst>
    </example>
    <p>The <e>ch</e> attibute of the <e>ctrl</e> element encodes a control symbol.</p>
  </sect>

  <sect>
    <title>Encoding special symbols: <e>spec</e></title>
    <example>
      <title>TeXML:</title>
      <lst><![CDATA[<spec cat="vert"/>l<spec cat="vert"/>]]></lst>
    </example>
    <example>
      <title>TeX:</title>
      <lst>|l|</lst>
    </example>
    <p>The attribute <e>cat</e> of the element <e>spec</e> creates the corresponding symbol verbatim, without escaping.</p>
    <table border="1">
      <caption><e>cat</e> attribute values</caption>
      <tr>
        <th>description</th>
        <th><e>cat</e> value</th>
        <th>output</th>
      </tr>
      <tr>
        <td>escape character</td>
        <td>esc</td>
        <td>\</td>
      </tr>
      <tr>
        <td>begin group</td>
        <td>bg</td>
        <td>{</td>
      </tr>
      <tr>
        <td>end group</td>
        <td>eg</td>
        <td>}</td>
      </tr>
      <tr>
        <td>math shift</td>
        <td>mshift</td>
        <td>$</td>
      </tr>
      <tr>
        <td>alignment tab</td>
        <td>align</td>
        <td>&amp;</td>
      </tr>
      <tr>
        <td>parameter</td>
        <td>parm</td>
        <td>#</td>
      </tr>
      <tr>
        <td>superscript</td>
        <td>sup</td>
        <td>^</td>
      </tr>
      <tr>
        <td>subscript</td>
        <td>sub</td>
        <td>_</td>
      </tr>
      <tr>
        <td>tilde</td>
        <td>tilde</td>
        <td>~</td>
      </tr>
      <tr>
        <td>comment</td>
        <td>comment</td>
        <td>%</td>
      </tr>
      <tr>
        <td>vertical line</td>
        <td>vert</td>
        <td>|</td>
      </tr>
      <tr>
        <td>less than</td>
        <td>lt</td>
        <td>&lt;</td>
      </tr>
      <tr>
        <td>greater than</td>
        <td>gt</td>
        <td>&gt;</td>
      </tr>
    </table>
  </sect>

  <sect>
    <title>PDF literals: <e>pdf</e></title>
    <example>
      <title>TeXML:</title>
      <lst>&lt;pdf>&#964;&#949;&#967;&lt;/pdf></lst>
    </example>
    <example>
      <title>TeX:</title>
      <lst>\003\304\003\265\003\307</lst>
    </example>
    <p>Content of the element <e>pdf</e> is converted to UTF16BE encoding and represented using escaped octal codes. The result is a PDF unicode string.</p>
  </sect>

  <sect>
    <title>Advanced topics</title>
    <sect><toc/></sect>
    
  <sect>
    <title>Characters</title>
    <p>Characters are processed as follows:</p>
    <ul>
      <li>If a character has a special meaning for TeX, then the character is translated as shown in the table below.</li>
      <li>If the character belongs to an output encoding, then the character is output as-is.</li>
      <li>If the character exists in a LaTeX unicode mapping table, then a corresponding substitution for the character is used.</li>
      <li>Otherwise the character is output as <tt>\unicodechar{NNNNN}</tt> where <tt>NNNNN</tt> is the decimal code for the character.</li>
    </ul>
    <p>To leave specials as is, without escaping, use the <e>TeXML</e> attribute <e>escape</e>:</p>
    <example>
      <lst><![CDATA[<TeXML escape="0">...</TeXML>]]></lst>
    </example>
    <table border="1">
      <caption>Mapping of the special symbols</caption>
      <tr>
        <th>symbol</th>
        <th>text mode</th>
        <th>math mode</th>
      </tr>
      <tr>
        <td>\</td>
        <td>\textbackslash{}</td>
        <td>\backslash{}</td>
      </tr>
      <tr>
        <td>{</td>
        <td>\{</td>
        <td>\{</td>
      </tr>
      <tr>
        <td>}</td>
        <td>\}</td>
        <td>\}</td>
      </tr>
      <tr>
        <td>$</td>
        <td>\textdollar{}</td>
        <td>\$</td>
      </tr>
      <tr>
        <td>&amp;</td>
        <td>\&amp;</td>
        <td>\&amp;</td>
      </tr>
      <tr>
        <td>#</td>
        <td>\#</td>
        <td>\#</td>
      </tr>
      <tr>
        <td>^</td>
        <td>\^{}</td>
        <td>\^{}</td>
      </tr>
      <tr>
        <td>_</td>
        <td>\_</td>
        <td>\_</td>
      </tr>
      <tr>
        <td>~</td>
        <td>\textasciitilde{}</td>
        <td>\~{}</td>
      </tr>
      <tr>
        <td>%</td>
        <td>\%</td>
        <td>\%</td>
      </tr>
      <tr>
        <td>|</td>
        <td>\textbar{}</td>
        <td>|</td>
      </tr>
      <tr>
        <td>&lt;</td>
        <td>\textless{}</td>
        <td>&lt;</td>
      </tr>
      <tr>
        <td>&gt;</td>
        <td>\textgreater{}</td>
        <td>&gt;</td>
      </tr>
    </table>
    <p>The LaTeX mapping table for unicode characters is automatically generated from the file <a href="http://www.w3.org/Math/characters/unicode.xml">unicode.xml</a>. This file is an appendix for the W3C MathML specification.</p>
    <p>If a replacement of an unicode character <i>a)</i> is valid only in math mode and <i>b)</i> the current mode is text, then the replacement is wrapped by the command &#x201c;<tt>\ensuremath</tt>&#x201d;. Likewise if a replacement <i>a)</i> is valid only in text mode and <i>b)</i> the current mode is math, then wrapper &#x201c;<tt>\ensuretext</tt>&#x201d; is used.</p>
    <p>LaTeX does not have the command &#x201c;<tt>\ensuretext</tt>&#x201d; so you should define it yourself. One of the approaches is:</p>
    <example>
      <lst>\def\ensuretext{\textrm}</lst>
    </example>
  </sect>

  <sect>
    <title>Empty lines</title>
    <p>Empty lines have a special meaning for TeX. They cause automatic generation of the TeX command <tt>\par</tt>. To avoid this, the processor outputs a line with the one symbol <tt>%</tt> (TeX comment) instead of a empty line.</p>
    <p>To leave empty lines as is, use the <e>TeXML</e> attribute <e>emptylines</e>:</p>
    <example>
      <lst><![CDATA[<TeXML emptylines="1">...</TeXML>]]></lst>
    </example>
  </sect>

  <sect>
    <title>Ligatures</title>
    <p>The TeXML processor disconnects well-known ligatures &#x201c;<tt>--</tt>&#x201d;, &#x201c;<tt>---</tt>&#x201d;, &#x201c;<tt>``</tt>&#x201d;, &#x201c;<tt>''</tt>&#x201d;, &#x201c;<tt>!`</tt>&#x201d; and &#x201c;<tt>?`</tt>&#x201d;. These ligatures are converted into &#x201c;<tt>-{}-</tt>&#x201d;, &#x201c;<tt>-{}-{}-</tt>&#x201d;, &#x201c;<tt>`{}`</tt>&#x201d;, &#x201c;<tt>'{}'</tt>&#x201d;, &#x201c;<tt>!{}`</tt>&#x201d;, and &#x201c;<tt>?{}`</tt>&#x201d; respectively.</p>
    <p>To leave ligatures as is, use the <e>TeXML</e> attribute <e>ligatures</e>:</p>
    <example>
      <lst><![CDATA[<TeXML ligatures="1">...</TeXML>]]></lst>
    </example>
  </sect>

  <sect>
    <title>Modes</title>
    <p>There are two modes: <tt>text</tt> and <tt>math</tt>. Modes only affect the translation of characters.</p>
    <p>The default mode is <tt>text</tt>. In order to change mode, use the <e>mode</e> attribute of the element <e>TeXML</e>. The possible values for this attribute are <tt>math</tt> and <tt>text</tt>. If the element <e>TeXML</e> is used without attribute <e>mode</e>, then the mode is not changed.</p>
    <example>
<lst><![CDATA[<TeXML mode="math">
  ... math mode here ...
  <TeXML mode="text">... text mode here ...</TeXML>
</TeXML>]]></lst>
    </example>
    <p>Elements <e>math</e> and <e>dmath</e> also change mode to <tt>math</tt>.</p>
  </sect>

  <sect>
    <title>Whitespace processing</title>
    <a name="wsproc"/><p>The TeXML processor performs advanced whitespace processing. The program</p>
    <ul>
      <li>removes what can be regarded as insignificant whitespace, and</li>
      <li>introduces its own whitespace which would look reasonable from a human point of view.</li>
    </ul>
    <p>If you find that something goes wrong you can switch off whitespace elimination using the <e>ws</e> attribute of the <e>TeXML</e> tag.</p>
    <example>
      <lst><![CDATA[<TeXML ws="1">
  ... whitespace is verbatim here ...
</TeXML>]]></lst>
    </example>
    <p>If the TeXML elements <tt>ctrl</tt> or <tt>spec</tt> have any content (including whitespace) then the TeXML processor reports an error.</p>
    <p>The program deletes any whitespace that is located directly in the TeXML element <tt>cmd</tt>.</p>
    <p>Insignificant whitespace is whitespace around any opening or closing tag, for example, whitespace around &#x201c;<tt>... &lt;TeXML&gt; ...</tt>&#x201d; and &#x201c;<tt>... &lt;/TeXML&gt; ...</tt>&#x201d;. The XML reader converts insignificant whitespace into the <i>weak&#xa0;space</i>.</p>
    <p>Another source of weak spaces is TeX commands. When the processor converts &#x201c;<tt>&lt;cmd name="it"/&gt;</tt>&#x201d; into &#x201c;<tt>\it </tt>&#x201d;, the space after &#x201c;<tt>\it</tt>&#x201d; is a weak space.</p>
    <p>The TeX writer processes weak spaces in the following manner:</p>
    <ul>
      <li>repeated weak spaces are interpreted as one weak space,</li>
      <li>a weak space at the beginning of a line is ignored,</li>
      <li>a weak space at the end of a line is ignored,</li>
      <li>otherwise the usual space symbol (or new line, see below) is written.</li>
    </ul>
  </sect>

  <sect>
    <title>Tuning layout</title>
    <p>The resulting documents are usually very good, but after some tuning they can be even better. This section describes how whitespace is handled and introduces some hints to make resulting documents look as good as handcrafted.</p>
  
    <sect>
      <title>Empty group after a command</title>
      <p>If a command has no parameters and options then the TeXML processor adds an empty group &#x201c;<tt>{}</tt>&#x201d; after the command name: &#x201c;<tt>\smth{}</tt>&#x201d;. Without the empty group, the following whitespace is ignored by TeX, but sometimes it is exactly what you need. In this case set attribute &#x201c;<tt>gr</tt>&#x201d; (shortcut for &#x201c;group&#x201d;) to &#x201c;<tt>0</tt>&#x201d;.</p>
      <example>
        <title>TeXML:</title>
        <lst><![CDATA[<cmd name="it"/> once, <cmd name="it" gr="0"/> twice]]></lst>
      </example>
      <example>
        <title>TeX:</title>
        <lst>\it{} once, \it twice</lst>
      </example>
    </sect>

    <sect>
      <title>Automatic line breaks</title>
      <p>It's difficult to work with documents that are one long line as a result of transformation, so the TeXML processor performs automatic line breaking.</p>
      <ul>
        <li>TeX commands for beginning and ending an environment are placed on separated lines.</li>
        <li>If a weak space appears far enough from the beginning of line then a new line is started.</li>
      </ul>
      <p>By default &#x201c;far enough&#x201d; is 62. You can set another value by using command line parameter &#x201c;<tt>-w</tt>&#x201d; or &#x201c;<tt>--width</tt>&#x201d;. This setting is not strict: a line can be much longer than a specified width, if there are no spaces in it.</p>
    </sect>

    <sect>
      <title>Whitespace around commands</title>
      <p>Attributes <e>nl1</e> and <e>nl2</e> can be used to force a new line before (<e>nl1</e>) or after (<e>nl2</e>) TeX command.</p>
    </sect>

    <sect>
      <title>Whitespace around environments</title>
      <p>The TeXML processor automatically creates new lines around the beginning and the end of an environment. You can change this behaviour using four attributes: <e>nl1</e> (before the beginning), <e>nl2</e> (after the beginning), <e>nl3</e> (before the end) and <e>nl4</e> (after the end).</p>
    </sect>

    <sect>
      <title>Forced whitespace</title>
      <p>You can affect whitespace output by using special categories of the element <e>spec</e>: <tt>nl</tt>, <tt>nl?</tt>, <tt>space</tt> and <tt>nil</tt>.</p>
    </sect>
    <ul>
      <li><tt>nl</tt> stands for a new line.</li>
      <li><tt>nl?</tt> is a conditional version of the <tt>nl</tt>. A new line is created unless it is already created.</li>
      <li><tt>space</tt> stands for a space. You can use it to output several consequent spaces or to create a space at the beginning or end of a line.</li>
      <li><tt>nil</tt> stands for nothing. The only purpose of it is a side effect: whitespace around it is collapsed.</li>
    </ul>
  </sect>

  <sect>
    <title>TeXML namespace</title>
    <p>TeXML namespace is <tt>http://getfo.sourceforge.net/texml/ns1</tt>.</p>
    <example>
      <lst><![CDATA[<TeXML xmlns="http://getfo.sourceforge.net/texml/ns1">
  ...
</TeXML>]]></lst>
    </example>
  </sect>

  <sect>
    <title>ConTeXt support</title>
    <p>In the ConTeXt mode, the element <e>env</e> creates ConTeXt environments.</p>
    <example>
      <title>TeXML:</title>
<lst>&lt;env name="document"&gt;
...
&lt;/env&gt;</lst>
    </example>
    <example>
      <title>TeX:</title>
<lst>\begindocument
...
\enddocument</lst>
    </example>
    <p>To activate ConTeXt mode, give the command line option <tt>-c</tt> or <tt>--context</tt> to the TeXML processor.</p>
  </sect>
</sect>

</doc>
